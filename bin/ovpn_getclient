#!/bin/bash

#
# Get an OpenVPN client configuration file
#

if [ "$DEBUG" == "1" ]; then
    set -x
fi

set -e

if [ -z "$OPENVPN" ]; then
    export OPENVPN="$PWD"
fi
if ! source "$OPENVPN/ovpn_env.sh"; then
    echo "Could not source $OPENVPN/ovpn_env.sh."
    exit 1
fi
if [ -z "$EASYRSA_PKI" ]; then
    export EASYRSA_PKI="$OPENVPN/pki"
fi

get_client_config() {
echo "client
nobind
dev $OVPN_DEVICE
remote-cert-tls server

remote $OVPN_CN $OVPN_PORT $OVPN_PROTO"
    if [ "$OVPN_PROTO" == "udp6" ]; then
        echo "remote $OVPN_CN $OVPN_PORT udp"
    fi
    if [ "$OVPN_PROTO" == "tcp6" ]; then
        echo "remote $OVPN_CN $OVPN_PORT tcp"
    fi
    for i in "${OVPN_EXTRA_CLIENT_CONFIG[@]}"; do
      echo "$i"
    done

echo "
# Auth configuration
auth-user-pass
auth-nocache

# Certificates & Keys
key-direction 1
<ca>
$(cat $EASYRSA_PKI/ca.crt)
</ca>
<tls-auth>
$(cat $EASYRSA_PKI/ta.key)
</tls-auth>

# Misc"
    if [ "$OVPN_DEFROUTE" != "0" ];then
        echo "redirect-gateway def1"
    fi

    if [ -n "$OVPN_MTU" ]; then
        echo "tun-mtu $OVPN_MTU"
    fi

    if [ -n "$OVPN_TLS_CIPHER" ]; then
        echo "tls-cipher $OVPN_TLS_CIPHER"
    fi

    if [ -n "$OVPN_CIPHER" ]; then
        echo "cipher $OVPN_CIPHER"
    fi

    if [ -n "$OVPN_AUTH" ]; then
        echo "auth $OVPN_AUTH"
    fi

    if [ "$OVPN_COMP_LZO" == "1" ]; then
        echo "comp-lzo"
    fi
}

get_client_config
